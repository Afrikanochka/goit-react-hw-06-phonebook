{"version":3,"sources":["Components/contactForm/contactForm.module.css","Components/contactList/contactList.module.css","Components/filter/filter.module.css","redux/contacts/contactsAction.jsx","Components/contactForm/ContactForm.jsx","Components/contactList/ContactList.jsx","Components/filter/Filter.jsx","Components/App.js","redux/contacts/contactsReducer.jsx","redux/store.js","index.js"],"names":["module","exports","contactsActions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","filter","storageContact","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","toLowerCase","alert","onSubmit","this","className","styles","form","htmlFor","label","onChange","placeholder","type","pattern","title","required","button","Component","connect","items","dispatch","getFilterContacts","allContacts","normalizedFilter","includes","onDeleteContact","list","map","item","info","onClick","event","target","App","newContact","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","mapDispatchToProps","createReducer","actions","action","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,8B,mBCA/FD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA7FD,EAAOC,QAAU,CAAC,MAAQ,wB,wJC8BRC,EAJQ,CACtBC,WAzBeC,YAAa,iBAAiB,SAACC,EAAMC,GACpD,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAoBQI,cAfQN,YAAa,oBAAoB,SAAAI,GACrD,MAAO,CACLD,QAASC,MAagBG,aATRP,YAAa,0BAA0B,SAAAQ,GAC1D,MAAO,CACLL,QAASK,MAO8BC,eAHpBT,YAAa,6B,+BCnBhCU,E,4MACFC,MAAQ,CACJV,KAAM,GACNC,OAAQ,I,EAGXU,aAAe,SAACC,GACb,MAAwBA,EAAEC,cAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBf,EAAOc,K,EAG3BE,aAAe,SAACJ,GACbA,EAAEK,iBAEF,MAAwB,EAAKP,MAArBV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAMd,GALqB,EAAKiB,MAAlBC,SACuBC,MAC7B,SAAAC,GAAO,OAAIA,EAAQrB,KAAKsB,gBAAkBtB,EAAKsB,iBAI/C,OAAOC,MAAM,YAAD,OAAavB,EAAb,qBAEd,EAAKkB,MAAMM,SAASxB,EAAMC,GAE1B,EAAKc,SAAS,CAAEf,KAAM,GAAIC,OAAQ,M,4CAGtC,WACI,MAAuBwB,KAAKf,MAArBV,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OACb,OACI,uBAAMyB,UAAWC,IAAOC,KAAMJ,SAAUC,KAAKT,aAA7C,UACA,uBAAOa,QAAQ,OAAOH,UAAWC,IAAOG,MAAxC,SACA,uBACChB,MAAOd,EACP+B,SAAUN,KAAKd,aACfqB,YAAY,gEACZC,KAAK,OACLjC,KAAK,OACLkC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,MAGT,uBAAOP,QAAQ,SAASH,UAAWC,IAAOG,MAA1C,SACA,uBACChB,MAAOb,EACP8B,SAAUN,KAAKd,aACfqB,YAAY,YACZC,KAAK,MACLjC,KAAK,SACLkC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,MAGT,wBAAQV,UAAWC,IAAOU,OAAQJ,KAAK,SAAvC,gC,GAzDcK,aA4EXC,eAbS,SAAA7B,GAAK,MAAK,CAChCS,SAAUT,EAAMS,SAASqB,UAGA,SAAAC,GAAQ,MAAK,CACtCjB,SAAU,SAACxB,EAAMC,GAAP,OACVwC,EAAS5C,EAAgBC,WAAWE,EAAMC,QAO7BsC,CAA6C9B,G,iBCxDtDiC,EAAoB,SAACC,EAAapC,GAEtC,IAAMqC,EAAmBrC,EAAOe,cAEhC,OAAOqB,EAAYpC,QAAO,SAAAc,GAAO,OAC/BA,EAAQrB,KAAKsB,cAAcuB,SAASD,OAmBzBL,eAfS,SAAA7B,GACtB,MAAO,CACLS,SAAUuB,EAAkBhC,EAAMS,SAASqB,MAAO9B,EAAMS,SAASZ,YAI1C,SAAAkC,GAAQ,MAAK,CACtCK,gBAAiB,SAAA3C,GAAE,OAAIsC,EAAS5C,EAAgBQ,cAAcF,QAQjDoC,EA7CK,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,SAAU2B,EAAsB,EAAtBA,gBAC7B,OACI,oBAAIpB,UAAWC,IAAOoB,KAAtB,SACC5B,EAAS6B,KAAI,gBAAG7C,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIyB,UAAWC,IAAOsB,KAAtB,UACE,oBAAGvB,UAAWC,IAAOuB,KAArB,UACGlD,EADH,KACWC,KAEX,wBACEyB,UAAWC,IAAOU,OAClBJ,KAAK,SACLkB,QAAS,kBAAML,EAAgB3C,IAHjC,sBAJ+BA,W,iBCqB5BoC,eAbS,SAAA7B,GAAK,MAAK,CAChCI,MAAOJ,EAAMS,SAASZ,WAGG,SAAAkC,GAAQ,MAAK,CACtCV,SAAU,SAAAqB,GAAK,OAAIX,EAAS5C,EAAgBS,aAAa8C,EAAMC,OAAOvC,YAQzDyB,EAzBA,SAAC,GAAD,IAAGhC,EAAH,EAAGA,OAAQwB,EAAX,EAAWA,SAAX,OACb,wBAAOL,UAAWC,IAAOG,MAAzB,kCAEE,uBACEG,KAAK,OACLjC,KAAK,OACLc,MAAOP,EACPwB,SAAUA,UCLVuB,E,4MACF5C,MAAQ,CACJS,SAAU,GACVqB,MAAO,GACPjC,OAAQ,I,uDAIV,WACI,IAAMgD,EAAaC,aAAaC,QAAQ,YAEpCF,GACA9B,KAAKP,MAAMV,eAAekD,KAAKC,MAAMJ,M,gCAI7C,SAAmBK,EAAWC,GAC1B,IAAQ1C,EAAYM,KAAKP,MAAjBC,SAEJyC,EAAUzC,WAAaA,GACvBqC,aAAaM,QAAQ,WAAYJ,KAAKK,UAAU5C,M,oBAI1D,WACI,OACI,sBAAKO,UAAU,YAAf,UACI,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GA/BEY,aA0CZ0B,EAAqB,CACvBxD,eAAgBX,EAAgBW,gBAGrB+B,eARS,SAAA7B,GAAK,MAAK,CAC9BS,SAAUT,EAAMS,SAASqB,SAOWwB,EAAzBzB,CAA6Ce,G,uBClDtDd,EAAQyB,YAAc,IAAD,mBACtBC,EAAQpE,YAAa,SAACY,EAAOyD,GAAR,OAAoBA,EAAOjE,SAA3B,mBAAuCQ,OADtC,cAEtBwD,EAAQ7D,eAAgB,SAACK,EAAOyD,GAAR,OACzBzD,EAAMH,QAAO,qBAAGJ,KAAgBgE,EAAOjE,cAHhB,cAIxBgE,EAAQ1D,gBAAiB,SAACE,EAAOyD,GAAR,OAAmBA,EAAOjE,WAJ3B,IAOrBK,EAAS0D,YAAc,GAAD,eACvBC,EAAQ3D,QAAS,SAAC6D,EAAGD,GAAJ,OAAeA,EAAOjE,YAG3BmE,cAAgB,CAC7B7B,QACAjC,WCRW+D,EALDC,YAAe,CACzBC,QAAS,CAAErD,SAAUsD,GACrBC,UAAUC,I,MCKdC,IAASC,OACP,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACA,cAAC,IAAD,UACE,cAAC,EAAD,QAGFQ,SAASC,eAAe,W","file":"static/js/main.663d6820.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3O6nU\",\"label\":\"contactForm_label__C-F85\",\"button\":\"contactForm_button__2isC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__1Zzbx\",\"item\":\"contactList_item__1FHjT\",\"button\":\"contactList_button__3bOe1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__2OYox\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('phoneBook/add', (name, number) => {\r\n    return {\r\n      payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n      },\r\n    };\r\n  });\r\n\r\n  const deleteContact = createAction('phoneBook/delete', id => {\r\n    return {\r\n      payload: id,\r\n    };\r\n  });\r\n  \r\n  const changeFilter = createAction('phoneBook/changeFilter', filter => {\r\n    return {\r\n      payload: filter,\r\n    };\r\n  });\r\n\r\n  const storageContact = createAction('phoneBook/storageContact');\r\n\r\n  const contactsActions = {\r\n    addContact, deleteContact, changeFilter, storageContact,\r\n  }\r\n  \r\n  export default  contactsActions ;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport contactsActions from \"../../redux/contacts/contactsAction\";\r\nimport styles from \"./contactForm.module.css\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass ContactForm extends Component {\r\n    state = { \r\n        name: '',\r\n        number: '',\r\n     }\r\n\r\n     handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n    \r\n        this.setState({ [name]: value });\r\n      };\r\n\r\n     handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const { name, number} = this.state;\r\n        const { contacts } = this.props;\r\n        const existContacts = contacts.find(\r\n          contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n\r\n        if (existContacts) {\r\n          return alert(`Contact \"${name}\" already exists`);\r\n        }\r\n        this.props.onSubmit(name, number);\r\n    \r\n        this.setState({ name: '', number: '' });\r\n      };\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit} >\r\n            <label htmlFor=\"name\" className={styles.label}>\r\n            <input\r\n             value={name}\r\n             onChange={this.handleChange}\r\n             placeholder=\"Имя Фамилия\"\r\n             type=\"text\"\r\n             name=\"name\"\r\n             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n             required\r\n/>\r\n            </label>\r\n            <label htmlFor=\"number\" className={styles.label}>\r\n            <input\r\n             value={number}\r\n             onChange={this.handleChange}\r\n             placeholder=\"111-11-11\"\r\n             type=\"tel\"\r\n             name=\"number\"\r\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n             required\r\n/>\r\n            </label>\r\n            <button className={styles.button} type=\"submit\" >Add contact</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n  dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactForm);","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from '../../redux/contacts/contactsAction';\r\nimport styles from './contactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={styles.item} key={id}>\r\n            <p className={styles.info}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}>\r\n                  Delete\r\n              </button>\r\n        \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nconst getFilterContacts = (allContacts, filter) => {\r\n  \r\n  const normalizedFilter = filter.toLowerCase();\r\n  // console.log(allContacts);\r\n  return allContacts.filter(contact => \r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapstateToProps = state => {\r\n  return {\r\n    contacts: getFilterContacts(state.contacts.items, state.contacts.filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n})\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, contacts } = state.contacts;\r\n//   const filteredContacts = onFilterRender(contacts, filter);\r\n\r\n//   return { contacts: filteredContacts };\r\n// };","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsAction\";\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      value={filter}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nconst mapstateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts/contactsAction';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        items: [],\r\n        filter: ''\r\n\r\n      }\r\n\r\n      componentDidMount() {\r\n          const newContact = localStorage.getItem('contacts');\r\n\r\n          if (newContact) {\r\n              this.props.storageContact(JSON.parse(newContact));\r\n          }\r\n      }\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n          const { contacts} = this.props;\r\n\r\n          if (prevProps.contacts !== contacts) {\r\n              localStorage.setItem('contacts', JSON.stringify(contacts));\r\n          }\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Phonebook</h1>\r\n                <ContactForm/>\r\n                <h2>Contacts</h2>\r\n                <Filter/>\r\n                <ContactList />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n    contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    storageContact: contactsActions.storageContact,\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(App);","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from './contactsAction';\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, action) => [action.payload, ...state],\r\n    [actions.deleteContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n  [actions.storageContact]: (state, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filter]: (_, action) => action.payload,\r\n  });\r\n  \r\n  export default combineReducers({\r\n    items,\r\n    filter,\r\n  });","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n    reducer: { contacts: contactsReducer},\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./Components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport store from \"./redux/store\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n   </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}